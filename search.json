[{"title":"Linux编译安装Vim 8.0","url":"http://www.moodmax.me/2018/03/24/Linux编译安装Vim-8-0/","content":"<blockquote>\n<p>折腾vim插件的过程中发现一些插件需要Ruby或者python/python3特性的支持，而系统默认安装或者apt安装的vi/vim一些特性并没有开启，因此我们需要手动编译安装Vim，这里采用了最新的8.1版本，此外还在安装选项中开启需要的特性支持。</p>\n</blockquote>\n<p>系统环境：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">操作系统：Linux Mint 18.2 64bit</span><br><span class=\"line\">Python：系统自带的Python2和Anaconda版Python3</span><br></pre></td></tr></table></figure>\n<h3 id=\"安装依赖组件\"><a href=\"#安装依赖组件\" class=\"headerlink\" title=\"安装依赖组件\"></a>安装依赖组件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install git ruby-dev lua5.1 lua5.1-dev v libgnomeui-dev libgtk2.0-dev libatk1.0-dev  libx11-dev libncurses5-dev libgnome2-de libxpm-dev libxt-dev python-dev python3-dev  libbonoboui2-dev libcairo2-dev</span><br></pre></td></tr></table></figure>\n<h3 id=\"下载vim8-0源码\"><a href=\"#下载vim8-0源码\" class=\"headerlink\" title=\"下载vim8.0源码\"></a>下载vim8.0源码</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/vim/vim.git</span><br><span class=\"line\">cd vim</span><br><span class=\"line\">git checkout v8.0.子版本号</span><br></pre></td></tr></table></figure>\n<h4 id=\"配置选项\"><a href=\"#配置选项\" class=\"headerlink\" title=\"配置选项\"></a>配置选项</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./configure --with-features=huge \\   # 支持最大特性</span><br><span class=\"line\">            --enable-multibyte \\\t # 打开多字节支持，可在Vim中输入中文</span><br><span class=\"line\">            --enable-rubyinterp \\\t # 打开对Ruby编写插件的支持</span><br><span class=\"line\">            --with-ruby-command=ruby \\ # 打开对Ruby的支持</span><br><span class=\"line\">            --enable-pythoninterp \\\t # 打开对Python2编写插件的支持</span><br><span class=\"line\">            --with-python-config-dir=/usr/lib/python2.7/config-x86_64-linux-gnu \\</span><br><span class=\"line\">            --enable-python3interp \\\t# 打开对Python3编写插件的支持</span><br><span class=\"line\">            --with-python3-config-dir=/usr/lib/python3.5/config-3.5m-x86_64-linux-gnu \\</span><br><span class=\"line\">            --enable-perlinterp \\ \t# 打开对perl编写插件的支持</span><br><span class=\"line\">            --enable-luainterp \\\t# 打开对lua编写插件的支持</span><br><span class=\"line\">            --enable-gui=gtk2 \t\t</span><br><span class=\"line\">            --enable-cscope </span><br><span class=\"line\">            --prefix=/opt/vim\t\t# 指定安装路径</span><br></pre></td></tr></table></figure>\n<h4 id=\"编译安装\"><a href=\"#编译安装\" class=\"headerlink\" title=\"编译安装\"></a>编译安装</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo make</span><br><span class=\"line\">sudo make install</span><br></pre></td></tr></table></figure>\n<h4 id=\"将新安装的vim设为默认的文本编辑器\"><a href=\"#将新安装的vim设为默认的文本编辑器\" class=\"headerlink\" title=\"将新安装的vim设为默认的文本编辑器\"></a>将新安装的vim设为默认的文本编辑器</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo update-alternatives --install /usr/bin/editor editor /usr/bin/vim 1</span><br><span class=\"line\">sudo update-alternatives --set editor /usr/bin/vim</span><br><span class=\"line\">sudo update-alternatives --install /usr/bin/vi vi /usr/bin/vim 1</span><br><span class=\"line\">sudo update-alternatives --set vi /usr/bin/vim</span><br></pre></td></tr></table></figure>\n<p>使用vim –version查看vim特性支持。</p>\n","categories":[],"tags":["Linux, Vim"]},{"title":"解决OpenCV 'cv2.cv2' has no attribute 'TrackerCSRT_create'","url":"http://www.moodmax.me/2018/01/15/解决OpenCV-cv2-cv2-has-no-attribute-TrackerCSRT-create/","content":"<blockquote>\n<p>使用OpenCV(version:3.4.1)的追踪算法时，代码运行出现module ‘cv2.cv2’ has no attribute ‘TrackerCSRT_create’错误提示信息，显示cv2模块中没有TrackerCSRT_create,查阅一些资料发现应该是安装OpenCV方式的问题导致追踪算法不可用。</p>\n</blockquote>\n<a id=\"more\"></a>\n<p>常用的OpenCV安装方式是pip安装或者<code>sudo apt install opencv-python</code>，这两种方式安装的OpenCV似乎并不完整，因为其中没有安装opencv_contrib模块，该模块存放OpenCV中一些不稳定的算法、正在开发的模块以及一些申请专利的算法，其中包含了Surf、Sift算法等，在OpenCV2版本中这些模块被集成进去，OpenCV3则需要单独安装，这也是导致追踪算法等一些其他模块不可用的原因。</p>\n<p>可以通过两种方式来安装：1. pip安装opencv_contrib模块  2. 源码编译安装OpenCV和opencv_contrib </p>\n<h2 id=\"1-pip安装OpenCV和open-contrib\"><a href=\"#1-pip安装OpenCV和open-contrib\" class=\"headerlink\" title=\"1. pip安装OpenCV和open_contrib\"></a>1. pip安装OpenCV和open_contrib</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install opencv-python</span><br><span class=\"line\">pip install opencv-contrib-python</span><br></pre></td></tr></table></figure>\n<p>python中执行以下命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import cv2</span><br><span class=\"line\">cv2.TrackerCSRT_create</span><br></pre></td></tr></table></figure>\n<p>如果没有出现错误信息表示模块可以正常使用了。</p>\n<h2 id=\"2-源码编译安装\"><a href=\"#2-源码编译安装\" class=\"headerlink\" title=\"2.源码编译安装\"></a>2.源码编译安装</h2><p>系统环境如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">OS: Linux Mint 18.2 64bit</span><br><span class=\"line\">Python Version: Python3.6.5 (Anaconda)</span><br></pre></td></tr></table></figure>\n<p>从Github上下载OpenCV源码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/opencv/opencv.git</span><br><span class=\"line\">git checkout 3.4.1</span><br></pre></td></tr></table></figure>\n<p>或者在Github上的tag标签中点击3.4.1版本号，之后点击Doanload zip下载压缩包。</p>\n<p>单独下载opencv_contrib模块</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -O opencv_contrib.zip https://github.com/opencv/opencv_contrib/archive/3.4.1.zip</span><br><span class=\"line\">unzip opencv_contrib.zip</span><br></pre></td></tr></table></figure>\n<p>安装OpenCV安装过程中所需要的一些依赖包</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt update</span><br><span class=\"line\">sudo apt install python3-dev cmake pkg-config build-essential</span><br><span class=\"line\">sudo apt install libtiff-dev libjpeg-dev libpng-dev\t# 安装一些图像处理相关包</span><br><span class=\"line\">sudo apt-get install libavcodec-dev libavformat-dev libswscale-dev libv4l-dev\t# 视频</span><br><span class=\"line\">sudo apt-get install libxvidcore-dev libx264-dev\t# 视频相关</span><br><span class=\"line\">sudo apt-get install libgtk-3-dev\t# GUI操作相关</span><br><span class=\"line\">sudo apt-get install libatlas-base-dev gfortran  # OpenCV性能优化</span><br></pre></td></tr></table></figure>\n<p>编译安装OpenCV</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd opencv</span><br><span class=\"line\">mkdir build</span><br><span class=\"line\">cd build</span><br><span class=\"line\">cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local \\</span><br><span class=\"line\">\t-D INSTALL_PYTHON_EXAMPLES=ON -D INSTALL_C_EXAMPLES=OFF \\</span><br><span class=\"line\">\t-D OPENCV_EXTRA_MODULES_PATH=~/opencv_contrib-3.4.1/modules \\</span><br><span class=\"line\">\t-D PYTHON_EXECUTABLE=/usr/bin/python -D BUILD_EXAMPLES=ON ..</span><br></pre></td></tr></table></figure>\n<p>上述指令中OPENCV_EXTRA_MODULES_PATH需要填写自己下载解压的opencv_contrib目录路径，PYTHON_EXECUTABLE需要更换成自己的python路径。构建过程可能会有一些慢，其中还会从网络上下载一些文件。</p>\n<p>使用cmake指令编译OpenCV，<code>make -j8</code>表示使用8个CPU核心编译OpenCV，具体情况需要根据自己的CPU来分配适合的核心数目。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">make -j8</span><br><span class=\"line\">sudo make install</span><br></pre></td></tr></table></figure>\n<p>打开python shell，输入如下指令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import cv2</span><br><span class=\"line\">cv2.TrackerCSRT_create</span><br></pre></td></tr></table></figure>\n<p>若出现如下类似信息</p>\n<center><img src=\"https://i.loli.net/2018/08/19/5b7952fa03cd6.png\" alt=\"\"> </center>\n\n<p>表明OpenCV和opencv_contrib均安装完成。</p>\n<p>到此，OpenCV安装完毕。</p>\n","categories":[],"tags":["OpenCV"]},{"title":"Python正则表达式(二)","url":"http://www.moodmax.me/2016/08/21/Python正则表达式(二)/","content":"<p><img src=\"https://i.loli.net/2018/08/17/5b7693dfdb9de.jpg\" alt=\"\"></p>\n<a id=\"more\"></a>\n<h2 id=\"正则描述符\"><a href=\"#正则描述符\" class=\"headerlink\" title=\"正则描述符\"></a>正则描述符</h2><h3 id=\"描述符\"><a href=\"#描述符\" class=\"headerlink\" title=\"*描述符\"></a>*描述符</h3><p>正则表达式的重复运算符是<code>*</code>，例如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">α*： 匹配模式α任意多次</span><br></pre></td></tr></table></figure></p>\n<p>因此执行<code>re.split(&#39;[ ,]*&#39;, &#39;abbaabbbadbbdbaabcaab&#39;)</code>得到的结果为[‘’, ‘bb’, ‘bbb’, ‘dbbdb’, ‘bc’, ‘b’]。</p>\n<h3 id=\"？描述符\"><a href=\"#？描述符\" class=\"headerlink\" title=\"？描述符\"></a>？描述符</h3><p>？为可选描述符。<br>比如α？表示与α匹配0次或1次，即匹配空串或者α模式串。<br>例如：表示整数的一种正则表达形式为<code>-?\\d+</code>，其匹配正数、负数和0。</p>\n<h3 id=\"n-描述符\"><a href=\"#n-描述符\" class=\"headerlink\" title=\"{n}描述符\"></a>{n}描述符</h3><p>{n}为重复次数描述符。<br>比如α{5}表示与α模式串重复匹配5次。<br>例如：匹配北京固话的正则表达式的一种表示形式为<code>(010-)?[2-9][0-9]{7}</code>。该正则与<code>010-</code>开头，随后一位数字为2到9，之后7位0到9的数字的字符串匹配。</p>\n<h3 id=\"m-n-描述符\"><a href=\"#m-n-描述符\" class=\"headerlink\" title=\"{m,n}描述符\"></a>{m,n}描述符</h3><p>{m,n}为重复次数范围描述符。<br>比如α{2,4}表示重复匹配α模式串2到4次，包括2次和4次。<br>重复范围描述符中的m和n可以省略，例如α{,n}等价与α{0,n}，而α{m,}等价于α{m,infinity}。</p>\n<h3 id=\"描述符-1\"><a href=\"#描述符-1\" class=\"headerlink\" title=\"|描述符\"></a>|描述符</h3><p><code>|</code>为选择描述符，其与两种或多种情况之一匹配。<br>比如<code>α|β</code>表示与α或者β之一的模式串匹配。</p>\n<h3 id=\"首位描述符\"><a href=\"#首位描述符\" class=\"headerlink\" title=\"首位描述符\"></a>首位描述符</h3><blockquote>\n<ul>\n<li>行首描述符：以’^’开头的模式串，与目标字符串一行的前缀子串匹配。</li>\n<li>行尾描述符：以’$’结尾的模式串，与目标字符串一行的后缀子串匹配。</li>\n</ul>\n</blockquote>\n<p>例如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">re.search(&apos;^for&apos;, &apos;This is for you&apos;)       #匹配结果为None。</span><br><span class=\"line\">re.search(&apos;^for&apos;, &apos;This is \\nfor you&apos;)     #匹配成功。</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">re.search(&apos;book$&apos;, &apos;I have many books&apos;)    #匹配结果为None。</span><br><span class=\"line\">re.search(&apos;book$&apos;, &apos;This is a book&apos;)       #匹配成功。</span><br></pre></td></tr></table></figure>\n<h2 id=\"贪婪匹配和非贪婪匹配\"><a href=\"#贪婪匹配和非贪婪匹配\" class=\"headerlink\" title=\"贪婪匹配和非贪婪匹配\"></a>贪婪匹配和非贪婪匹配</h2><p>考虑如下匹配模式：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">re.match(&apos;ab*&apos;, &apos;abbbbbbc&apos;)</span><br></pre></td></tr></table></figure></p>\n<p>对于其中的匹配模式<code>ab*</code>，匹配字符串中的<code>ab</code>和<code>abbbbbb</code>均可与其匹配，那么这个时候该匹配哪一种字符串呢？正则表达式提供了两种可能的匹配方案：</p>\n<blockquote>\n<ul>\n<li>贪婪匹配： 匹配目标字符串中尽可能长的子串</li>\n<li>非贪婪匹配： 匹配目标字符串尽可能短的子串</li>\n</ul>\n</blockquote>\n<p>其中非贪婪匹配又称<code>吝啬匹配</code>，正则表达式规定<code>*</code>运算符做贪婪匹配，因此上述<code>ab*</code>将会匹配<code>abbbbbb</code>。<br><code>*</code>、<code>+</code>、<code>?</code>、<code>{m,n}</code>均采取贪婪匹配规则，若要采用非贪婪匹配规则，可以使用非贪婪匹配描述符，<code>*?</code>、<code>+?</code>、<code>??</code>、<code>{m,n}?</code>均为非贪婪描述符，即在上述各贪婪描述符后加一个<code>?</code>，其语义与上述几个描述符对应，但都采取非贪婪匹配原则。</p>\n<h2 id=\"Python与正则表达式\"><a href=\"#Python与正则表达式\" class=\"headerlink\" title=\"Python与正则表达式\"></a>Python与正则表达式</h2><p>Python中使用正则表达式进行模式匹配时，匹配成功时会返回一个match对象，其中记录着匹配成功的相关信息。<br>不妨设我们匹配成功之后得到的match对象记为mat。</p>\n<h3 id=\"常用函数\"><a href=\"#常用函数\" class=\"headerlink\" title=\"常用函数\"></a>常用函数</h3><h4 id=\"mat-group\"><a href=\"#mat-group\" class=\"headerlink\" title=\"mat.group()\"></a>mat.group()</h4><p>group()函数用于取得匹配成功的子串。</p>\n<h4 id=\"mat-start\"><a href=\"#mat-start\" class=\"headerlink\" title=\"mat.start()\"></a>mat.start()</h4><p>start()函数获得匹配成功的目标子串起始位置的下标。</p>\n<h4 id=\"mat-end\"><a href=\"#mat-end\" class=\"headerlink\" title=\"mat.end()\"></a>mat.end()</h4><p>end()函数获得匹配成功的目标子串结束位置的下标。</p>\n<h4 id=\"mat-span\"><a href=\"#mat-span\" class=\"headerlink\" title=\"mat.span()\"></a>mat.span()</h4><p>span()函数获得匹配成功的目标子串的位置区间，即<code>mat.span() = mat.start(), mat.end()</code>。</p>\n<h3 id=\"正则模式的group\"><a href=\"#正则模式的group\" class=\"headerlink\" title=\"正则模式的group\"></a>正则模式的group</h3><p>正则表达式的一个重要概念是组。圆括号括起来的一段模式串代表一个组，在一次成功的匹配中，每一个组匹配成功的字符串将从1开始编号，组0表示与整个模式匹配的字符串，我们可以通过<code>mat.group(n)</code>来获得组n的匹配字符串。</p>\n<h3 id=\"其他常用匹配操作\"><a href=\"#其他常用匹配操作\" class=\"headerlink\" title=\"其他常用匹配操作\"></a>其他常用匹配操作</h3><p>正则表达式还有一些其他的常用匹配操作，如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 生成一个正则表达式对象，可重复使用。</span><br><span class=\"line\">re.compile(pattern)</span><br><span class=\"line\"></span><br><span class=\"line\"># 若string与pattern模式匹配成功返回匹配对象，否则返回None</span><br><span class=\"line\">re.fulmatch(pattern, string, flags=0)</span><br><span class=\"line\"></span><br><span class=\"line\"># 将匹配结果以迭代器的形式返回，否则返回None</span><br><span class=\"line\">re.finditer(pattern, string, flags=0)</span><br><span class=\"line\"></span><br><span class=\"line\"># 将string中与pattern模式匹配的部分用repl替换</span><br><span class=\"line\">re.sub(pattern, repl, string, count=0, flags=0)</span><br></pre></td></tr></table></figure>\n","categories":[],"tags":["Python","RegEx"]},{"title":"Python正则表达式(一)","url":"http://www.moodmax.me/2016/03/18/Python正则表达式(一)/","content":"<blockquote>\n<p>在实际生活中经常面对的问题是要检索出具有某种形式的字符串而不是某个字符串，这种检索只考虑字符串的形式而不考虑其字面意义，Python中的正则表达式可以帮我们很好的完成字符串的检索和匹配等操作。 </p>\n</blockquote>\n<a id=\"more\"></a>\n<h1 id=\"正则表达式\"><a href=\"#正则表达式\" class=\"headerlink\" title=\"正则表达式\"></a>正则表达式</h1><p>正则表达式是一种描述字符串<code>集合</code>的语言，其基本组成是普通字符、特殊组合结构以及表示组合的括号，一个正则表达式描述了字符集上的一组特定的字符串。 </p>\n<h2 id=\"简单示例\"><a href=\"#简单示例\" class=\"headerlink\" title=\"简单示例\"></a>简单示例</h2><p>假设α和β都是正则表达式，则:  </p>\n<blockquote>\n<ul>\n<li>正则表达式里的普通字符至于该字符本身匹配 </li>\n<li>顺序组合αβ：如果α能匹配字符串s，β能匹配字符串t，则αβ能匹配字符串拼接s+t </li>\n<li>选择组合α|β：如果α能匹配s，β能匹配字符串t，则α|β能匹配字符串s或者字符串t</li>\n<li>星号α*：如果α能匹配字符串s，则α*能匹配能匹配<code>空串</code>、s、s+s、s+s+s等等，即α* 能匹配0个或任意多个s字符串的拼接。 </li>\n</ul>\n</blockquote>\n<p>正则表达式还可以用括号表示表达式的组合，例如:</p>\n<blockquote>\n<ul>\n<li>正则表达式abc只与字符串abc匹配</li>\n<li>a(b*)(c*)：与在一个a开头的字符串且后面跟着0至任意多个b，之后再跟0至任意多个c的字符串匹配，相当于<code>a[任意多个b][任意多个c]</code>的字符串。</li>\n<li>a(b|c)*：与所有一个a开头的字符串且后面跟有任意多个b和c的串进行匹配，相当于<code>a[空串或者b或c的任意组合]</code>。</li>\n</ul>\n</blockquote>\n<h2 id=\"正则表达式的常见元素\"><a href=\"#正则表达式的常见元素\" class=\"headerlink\" title=\"正则表达式的常见元素\"></a>正则表达式的常见元素</h2><blockquote>\n<ul>\n<li>任一字符仅与其自身匹配</li>\n<li>圆点符号<code>.</code>可以匹配任意字符</li>\n<li>符号<code>^</code>匹配目标串的开头，不匹配任何具体字符</li>\n<li>符号<code>$</code>匹配目标串的结尾，不匹配任何具体字符</li>\n<li>符号<code>*</code>表示其前面的字符可以重复出现0次或者任意多次</li>\n</ul>\n</blockquote>\n<p>注意:<strong>*和$符号至多在匹配模式的开始和结束出现一次</strong></p>\n<h1 id=\"Python正则表达式\"><a href=\"#Python正则表达式\" class=\"headerlink\" title=\"Python正则表达式\"></a>Python正则表达式</h1><p>大多数编程语言都提供了正则表达式的功能，Python通过标准库re提供，利用正则表达式可以实现许多复杂的字符串操作，想要使用Python的一些正则表达式功能和方法需要首先导入re包:<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> re</span><br></pre></td></tr></table></figure></p>\n<p>下面我们以一个实际问题来演示Python中如何使用正则表达式： </p>\n<blockquote>\n<p>问题：求一个Python程序里面出现的所有整数之和(Python语言中把一元的正负号看作运算符，不是整数的一部分，注意去掉注释行)</p>\n</blockquote>\n<p>Python实现代码如下:<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># !/usr/bin/env python</span></span><br><span class=\"line\"><span class=\"comment\"># coding: UTF-8</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">sumCount</span><span class=\"params\">(fname)</span>:</span></span><br><span class=\"line\">\tre_pattern = <span class=\"string\">r'\\b(0|[1-9]\\d*)\\b'</span></span><br><span class=\"line\">\tfobj = open(fname, <span class=\"string\">'rb'</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> fobj == <span class=\"keyword\">None</span>:</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">None</span></span><br><span class=\"line\">\tf_list = map(int, re.findall(re_pattern, fobj.read()))</span><br><span class=\"line\">\tresult = <span class=\"number\">0</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> f_list:</span><br><span class=\"line\">\t\tresult += i </span><br><span class=\"line\">\t<span class=\"keyword\">return</span> result</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">\tfname = raw_input(<span class=\"string\">\"Enter file name: \"</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">print</span>  <span class=\"string\">\"Result:\"</span>, sumCount(fname)</span><br></pre></td></tr></table></figure></p>\n<p>上面代码中，<code>re_pattern = r&#39;\\b(0|[1-9]\\d*)\\b&#39;</code>是匹配模式，map()函数将查找到的所有整数转换为int类型并声称结果列表，在之后的for循环中迭代相加。</p>\n<h2 id=\"Python正则表达式的构造\"><a href=\"#Python正则表达式的构造\" class=\"headerlink\" title=\"Python正则表达式的构造\"></a>Python正则表达式的构造</h2><h3 id=\"字符组\"><a href=\"#字符组\" class=\"headerlink\" title=\"字符组\"></a>字符组</h3><p>描述一组字符，某些正则表达式可以与一组字符中的任意一个字符匹配，这种描述方式称为字符组描述。</p>\n<h4 id=\"字符组描述符-…\"><a href=\"#字符组描述符-…\" class=\"headerlink\" title=\"字符组描述符[…]\"></a>字符组描述符[…]</h4><p>与方括号中列出的字符中的任意一个匹配，例如[abc]与a或b或c之中的一个匹配。此外还可以进行如下模式的匹配：</p>\n<blockquote>\n<ul>\n<li>字符区间形式：例如[a-z]匹配字符a到字符z之间的任意一个字符，[A-Za-z]匹配任意的一个大小写英文字母，[A-Za-z0-9]匹配任意的一个大小写字母或数字</li>\n<li>取反形式[^…]：表示对<code>^</code>之后的字符求补，例如[^0-9]匹配非数字字符，[^\\t\\v\\n\\f\\r]匹配所有非空字符(除去空格、制表符、换行符)</li>\n</ul>\n</blockquote>\n<p>注意：<strong>如果字符组里包含<code>^</code>、<code>-</code>、<code>]</code>字符，需要写成<code>\\^</code>、<code>\\-</code>、<code>\\]</code>的形式</strong></p>\n<h4 id=\"圆点字符\"><a href=\"#圆点字符\" class=\"headerlink\" title=\"圆点字符(.)\"></a>圆点字符(.)</h4><p>圆点是通配符，它能匹配任何字符。例如a..b匹配所有啊、以a开头以b结尾的长度为4的字符串。<br>为了方便，re采用转义串的形式定义了一些常用的字符组：</p>\n<blockquote>\n<ul>\n<li>\\d：匹配十进制数字，等价于[0-9]</li>\n<li>\\D：与所有非十进制的字符匹配，等价于[^0-9]</li>\n<li>\\s：与所有空白字符串匹配，等价于[ \\t\\v\\n\\f\\r]<code>注意空格</code></li>\n<li>\\S：与所有非空字符串匹配，等价于[^ \\t\\v\\n\\f\\r]</li>\n<li>\\w :与所有字母数字字符匹配，等价于[0-9a-zA-Z]</li>\n<li>\\W：与所有非字母数字匹配，等价于[^0-9a-zA-Z]</li>\n</ul>\n</blockquote>\n<p>例如：a\\d*\\W匹配以字符a开头，之后跟有0或多个数字，之后以一个非字母且非数字的字符结尾的字符串。</p>\n","categories":[],"tags":["Python","RegEx"]},{"title":"Pull Request","url":"http://www.moodmax.me/2015/12/20/Pull-Request/","content":"<center></center>\n\n<a id=\"more\"></a>\n<p>Pull Request是自己修改源代码之后，请求对方仓库采纳自己代码的一种行为。 </p>\n<h2 id=\"Pull-Request工作流程\"><a href=\"#Pull-Request工作流程\" class=\"headerlink\" title=\"Pull Request工作流程\"></a>Pull Request工作流程</h2><p>在GitHub上协同开发一款开源软件时，若其中某个功能存在bug，需要修补这个bug，如果这个修补bug的代码能被该开源软件仓库所采纳的话，以后所有使用这款软件以及开发这款软件的人就不会再遇到这个bug。<br>当发送一个Pull Request之后接收方仓库会创建一个附带源代码的Issue，这个Issue中记录详细的内容，这就是Pull Request。发送的PR待接收方审核之后才会被合并提交。</p>\n<h2 id=\"Fork\"><a href=\"#Fork\" class=\"headerlink\" title=\"Fork\"></a>Fork</h2><p>可以将Fork操作通俗理解为在原来的项目上创建了一个属于你自己的分支，你可以在该分支上进行修改等任意操作，当操作完毕你希望自己的修改能够合并到原项目中时，就需要使用到<code>Pull Request</code>，如果原项目的作者同意将你的修改合并到项目的主分支上，你就为该项目做出了贡献，contributors栏会出现贡献者的GitHub ID。<br>在远程仓库页面图中位置点击Fork按钮创建属于自己的仓库分支。</p>\n<center><img src=\"https://i.loli.net/2018/08/17/5b7695556303f.png\" alt=\"\"></center>\n\n<h2 id=\"git-clone\"><a href=\"#git-clone\" class=\"headerlink\" title=\"git clone\"></a>git clone</h2><p>将自己的仓库分支克隆到本地开发环境中，这样只需对本地clone下的仓库进行修改，之后push就能够修改GitHub中的仓库代码。</p>\n<h2 id=\"git-branch\"><a href=\"#git-branch\" class=\"headerlink\" title=\"git branch\"></a>git branch</h2><p>在GitHub上开发一般都使用特性分支而不是主分支进行开发，因为这样可以使Pull Request更具有目的性，更能使接收方清楚地了解到本次修改的主题内容，有助于提升代码审查的效率。<br>查看项目中的分支信息：</p>\n<center><img src=\"https://i.loli.net/2018/08/17/5b7695bcd1385.png\" alt=\"\"></center>\n\n<p>其中之前带有<code>*</code>号的分支表示当前分支，而<code>remotes/origin/</code>开头的分支是GitHub端仓库的分支。<br>创建一个<code>example</code>分支用来发送Pull Request，</p>\n<center><img src=\"https://i.loli.net/2018/08/17/5b769626e4da4.png\" alt=\"\"></center>\n\n<p>之后可以在当前分之下进行代码的修改操作，操作完成之后提交修改。<br>如果要将自己修改的代码合并到原项目中，需要先将自己的代码push到自己的远程代码仓库，之后从GitHub上进行Pull Request。<br>在GitHub上，首先要切换到<code>example</code>分支，如图：</p>\n<center><img src=\"https://i.loli.net/2018/08/17/5b7696632f816.png\" alt=\"\"></center>\n\n<p>之后点击上图右侧的<code>New pull request</code>，进入创建Pull Request的页面，</p>\n<center><img src=\"https://i.loli.net/2018/08/17/5b769686a217b.png\" alt=\"\"></center>\n\n<p>添加相应的描述信息之后点击<code>Create pull request</code>即可完成Pull Request的发送。<br>此外，可以在自己GitHub的项目主页上的<code>Pull Request</code>标签页实时查看自己Pull Request的状态。</p>\n","categories":[],"tags":["Git"]},{"title":"Git远程操作","url":"http://www.moodmax.me/2015/12/19/Git远程操作/","content":"<p>这里介绍Git对远程仓库的一些基本操作，远程操作即是对网络上某一个远程而非本地的仓库进行操作。</p>\n<a id=\"more\"></a>\n<p>本篇主要介绍以下几个命令： </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone        #获取远程仓库</span><br><span class=\"line\">git remote add   #添加远程仓库</span><br><span class=\"line\">git push         #推送至远程仓库</span><br><span class=\"line\">git pull         #获取最新的远程仓库分支</span><br></pre></td></tr></table></figure>\n<p>开始之前，首先需要在Github上创建一个账户，并在账户中创建对应的远程仓库，这里创建了名为<code>giter</code>的远程仓库。</p>\n<center><img src=\"https://i.loli.net/2018/08/17/5b76658206956.png\" alt=\"\"></center> \n\n<h2 id=\"git-remote-add\"><a href=\"#git-remote-add\" class=\"headerlink\" title=\"git remote add\"></a>git remote add</h2><p>GitHub上的仓库路径名为<a href=\"mailto:`git@github.com\" target=\"_blank\" rel=\"noopener\">`git@github.com</a>:用户名/仓库名.git<code>，下面使用</code>git remote add<code>将</code>giter`设置为本地仓库的远程仓库：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote add origin git@github.com:evilfinder/giter.git</span><br></pre></td></tr></table></figure></p>\n<p>其中<code>origin</code>为远程仓库的本地标识符。</p>\n<h2 id=\"git-push\"><a href=\"#git-push\" class=\"headerlink\" title=\"git push\"></a>git push</h2><p>如果想把本地仓库中当前分支下的内容推送到远程仓库，要使用<code>git push</code>完成，例如本地仓库<code>giter-local</code>将其推送到远程仓库<code>giter</code>的master分之下，执行命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push -u origin master</span><br></pre></td></tr></table></figure></p>\n<p>此时，当前分支的内容就被推送到了远程仓库的master分之下，其中的<code>-u</code>参数可以将远程仓库的master分支设置为本地仓库的upstream，这样将来使用<code>git pull</code>命令从远程仓库获取的时候，本地仓库的分支就可以直接从远程仓库的master分支获取内容了，不必再次添加参数。<br>如果想推送到远程仓库的其他分支，可以切换到本地要推送的分支并在执行<code>git push</code>命令时，指定好要推送的远程分支即可，例如将本地的<code>fix-bug</code>分支推送到远程的<code>fix-bug</code>上，执行如下命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout fix-bug</span><br><span class=\"line\">git push -u origin fix-bug</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"git-clone\"><a href=\"#git-clone\" class=\"headerlink\" title=\"git clone\"></a>git clone</h2><p>获取远程仓库，即是将远程仓库克隆到本地，执行<code>git clone</code>命令之后默认位于master分之下，同时系统自动将origin设置为远程仓库的标识符，此时当前本地仓库的master分支和远程仓库的master分支内容相同，下面获取远程仓库<code>finder</code>：</p>\n<center><img src=\"https://i.loli.net/2018/08/17/5b76661982e47.png\" alt=\"\"></center>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/EvilFinder/Finder.git</span><br></pre></td></tr></table></figure>\n<center><img src=\"https://i.loli.net/2018/08/17/5b766648b076d.png\" alt=\"\"></center>\n\n<p>我们可以使用<code>git branch -a</code>查看当前分支相关信息，<code>-a</code>参数可以显示本地和远程仓库有的所有分支信息。<br>如果想要获取远程仓库finder的分支<code>fix-bug</code>，可以使用如下命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout -b fix-bug origin/fix-bug</span><br></pre></td></tr></table></figure></p>\n<p>修改本地的<code>fix-bug</code>分支：</p>\n<center><img src=\"https://i.loli.net/2018/08/17/5b7666839c179.png\" alt=\"\"></center> \n\n<p>提交修改，将<code>fix-bug</code>分支推送到远程仓库：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit -m &quot;Add Fix-Bug&quot;</span><br><span class=\"line\">git push</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"git-pull\"><a href=\"#git-pull\" class=\"headerlink\" title=\"git pull\"></a>git pull</h2><p>若本地仓库和远程仓库内容不一致，本地仓库的内容旧于远程仓库的内容，需要更新本地仓库以保证是在最新的仓库上进行开发，这时需要使用<code>git pull</code>命令，例如将本地仓库的分支<code>fix-bug</code>更新到最新状态，执行命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git pull origin fix-bug</span><br></pre></td></tr></table></figure></p>\n<p>这样本地仓库的<code>fix-bug</code>分支就能保持和远程仓库的同步，已达到保持最新状态的目的。 </p>\n","categories":[],"tags":["Git"]},{"title":"Git本地操作","url":"http://www.moodmax.me/2015/12/12/Git本地操作/","content":"<center><img src=\"https://i.loli.net/2018/08/17/5b765d91d8790.jpg\" alt=\"\"></center>\n\n<a id=\"more\"></a>\n<p>Git是一种目前十分流行的分布式版本控制系统，<strong>分布式</strong>的意思是客户端不只提取最新版本的文件快照，而是把原始的代码仓库完整的镜像下来，这样，任何一处协同工作的服务器发生故障，事后都可以用任何一个镜像出来的本地仓库恢复。</p>\n<p>Git使用SHA-1算法计算数据的校验和(又称指纹字符串)并将其作为数据的唯一索引和标识，Git中的操作完全依赖于这一串指纹字符串，所有保存在Git数据库中的数据都是以这一串哈希值来做索引而不是文件名。</p>\n<h2 id=\"三种状态\"><a href=\"#三种状态\" class=\"headerlink\" title=\"三种状态\"></a>三种状态</h2><p>要理解Git，首先要清楚其中文件的三种状态:已提交(committed)、已修改(modified)和已暂存(staged)。</p>\n<blockquote>\n<ul>\n<li>已提交表示文件已被保存在了本地的数据库中</li>\n<li>已修改表示文件已被修改但仍未被提交</li>\n<li>已暂存表示对于要提交的文件放入了提交清单中等待提交处理</li>\n</ul>\n</blockquote>\n<h2 id=\"基本配置\"><a href=\"#基本配置\" class=\"headerlink\" title=\"基本配置\"></a>基本配置</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name &quot;EvilFinder&quot;   #配置用户名</span><br><span class=\"line\">git config --global user.email &quot;rootkitspace@gmail.com&quot; #配置邮箱</span><br><span class=\"line\">git config --global core.editor vim #配置文本编辑器</span><br><span class=\"line\">git config --global merge.tool vimdiff #配置差异分析工具</span><br><span class=\"line\">git config --global color.ui auto  #配置输出内容颜色</span><br><span class=\"line\">git config --list #查看配置信息</span><br><span class=\"line\">git help config #查看config命令用法</span><br></pre></td></tr></table></figure>\n<p>上面的配置命令中，<code>--global</code>表示目前的配置文件只适用于该用户，其修改内容保存在<code>~/.gitconfig</code>文件中，若想配置针对当前所有用户都适用的配置，需要将<code>--global</code>改为<code>--system</code>选项，此时修改的文件为<code>/etc/gitconfig</code>文件。</p>\n<h2 id=\"Git简单上手\"><a href=\"#Git简单上手\" class=\"headerlink\" title=\"Git简单上手\"></a>Git简单上手</h2><p>这里介绍Git的一些基本操作。</p>\n<h3 id=\"初始化仓库\"><a href=\"#初始化仓库\" class=\"headerlink\" title=\"初始化仓库\"></a>初始化仓库</h3><blockquote>\n<ul>\n<li>mkdir giter </li>\n<li>cd giter</li>\n<li>git init</li>\n</ul>\n</blockquote>\n<p>上面三步创建了一个名为giter的文件夹并进入该文件夹执行了<code>git init</code>命令，该命令执行后将会在其目录下生成<code>.git</code>目录，这个<code>.git</code>目录存储着管理当前目录内容所需的仓库数据，在Git中我们将其称之为<code>附属于该仓库的目录树</code>。</p>\n<h3 id=\"查看仓库状态\"><a href=\"#查看仓库状态\" class=\"headerlink\" title=\"查看仓库状态\"></a>查看仓库状态</h3><blockquote>\n<ul>\n<li>git status</li>\n</ul>\n</blockquote>\n<p>该命令用于显示当前Git仓库的状态，下面是一次执行结果的输出：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git status</span><br><span class=\"line\">On branch master    #表示当前位于master分支</span><br><span class=\"line\">Initial commit</span><br><span class=\"line\">nothing to commit (create/copy files and use &quot;git add&quot; to track)</span><br><span class=\"line\"># 表示目前没有可供提交的数据</span><br></pre></td></tr></table></figure></p>\n<p>这是初始状态下的显示结果，创建文件README后显示状态如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git status</span><br><span class=\"line\">On branch master</span><br><span class=\"line\">Initial commit</span><br><span class=\"line\">Untracked files:</span><br><span class=\"line\">  (use &quot;git add &lt;file&gt;...&quot; to include in what will be committed)</span><br><span class=\"line\"></span><br><span class=\"line\">        README</span><br><span class=\"line\"></span><br><span class=\"line\">nothing added to commit but untracked files present (use &quot;git add&quot; to track)</span><br></pre></td></tr></table></figure></p>\n<p>其中<code>Untracked files:</code>中显示有未跟踪的文件<code>README</code>，并提示我们可以使用<code>git add README</code>指令进行跟踪,将其转换为暂存状态，跟踪之后再次执行<code>git status</code>显示如下:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git status</span><br><span class=\"line\">On branch master</span><br><span class=\"line\">Initial commit</span><br><span class=\"line\">Changes to be committed:</span><br><span class=\"line\">  (use &quot;git rm --cached &lt;file&gt;...&quot; to unstage)</span><br><span class=\"line\"></span><br><span class=\"line\">        new file:   README</span><br></pre></td></tr></table></figure></p>\n<p>其中提示我们有文件等待提交，并提示可以使用·<code>git rm --cached README</code>对该文件取消暂存。<br>若该文件修改之后，查看状态会显示如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git status</span><br><span class=\"line\">On branch master</span><br><span class=\"line\"></span><br><span class=\"line\">Initial commit</span><br><span class=\"line\"></span><br><span class=\"line\">Changes to be committed:</span><br><span class=\"line\">  (use &quot;git rm --cached &lt;file&gt;...&quot; to unstage)</span><br><span class=\"line\"></span><br><span class=\"line\">        new file:   README</span><br><span class=\"line\"></span><br><span class=\"line\">Changes not staged for commit:</span><br><span class=\"line\">  (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)</span><br><span class=\"line\">  (use &quot;git checkout -- &lt;file&gt;...&quot; to discard changes in working directory)</span><br><span class=\"line\"></span><br><span class=\"line\">        modified:   README</span><br></pre></td></tr></table></figure></p>\n<p>有没有注意到，上面显示了两个<code>README</code>文件，上面第一个表示上一次我们暂存但还未提交的README文件<br>，而下面的README文件表示我们本次修改了的README文件，我们如果在此时执行<code>git commit -m &#39;提交评论&#39;</code>，此时保存到本地数据库中的是我们未修改README之前的文件状态，只有当我们使用<code>git add README</code>，之后再执行<code>git commit -m &#39;提交评论&#39;</code>才会保存最新的文件状态。</p>\n<h3 id=\"向暂存区添加文件\"><a href=\"#向暂存区添加文件\" class=\"headerlink\" title=\"向暂存区添加文件\"></a>向暂存区添加文件</h3><p>其实上面<code>查看仓库状态</code>里面已经提到了该命令，使用<code>git add</code>可以将当前文件存入暂存区。</p>\n<h3 id=\"提交更新\"><a href=\"#提交更新\" class=\"headerlink\" title=\"提交更新\"></a>提交更新</h3><p><code>git commit</code>命令可以将当前暂存区的文件实际保存到仓库的历史记录中，通过这些历史记录我们可以复原文件。<br>下面是一次执行<code>git commit -m &quot;First commit&quot;</code>后，查看状态现实的内容：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git status</span><br><span class=\"line\">On branch master</span><br><span class=\"line\">nothing to commit, working directory clean</span><br></pre></td></tr></table></figure></p>\n<p>表示目前我们的工作区是干净的。</p>\n<h3 id=\"查看提交日志\"><a href=\"#查看提交日志\" class=\"headerlink\" title=\"查看提交日志\"></a>查看提交日志</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git log</span><br><span class=\"line\">commit b56393fbf0fa34dc95973114bfbcbb0f9d81f9e1</span><br><span class=\"line\">Author: EvilFinder &lt;rootkitspace@gmail.com&gt;</span><br><span class=\"line\">Date:   Fri Aug 12 15:43:40 2016 +0800</span><br><span class=\"line\"></span><br><span class=\"line\">    First commit</span><br></pre></td></tr></table></figure>\n<p>其中包含的信息有只想本次提交的哈希值<code>commit b56393fbf0fa34dc95973114bfbcbb0f9d81f9e1</code>，提交者相关信息、提交时日期和提交评论。<br>执行<code>git log --pretty=short</code>显示简述信息。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git log --pretty=short</span><br><span class=\"line\">commit b56393fbf0fa34dc95973114bfbcbb0f9d81f9e1</span><br><span class=\"line\">Author: EvilFinder &lt;rootkitspace@gmail.com&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    First commit</span><br></pre></td></tr></table></figure></p>\n<p>执行<code>git log -p</code>显示提交所做的改动。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git log -p</span><br><span class=\"line\">commit b56393fbf0fa34dc95973114bfbcbb0f9d81f9e1</span><br><span class=\"line\">Author: EvilFinder &lt;rootkitspace@gmail.com&gt;</span><br><span class=\"line\">Date:   Fri Aug 12 15:43:40 2016 +0800</span><br><span class=\"line\"></span><br><span class=\"line\">    First commit</span><br><span class=\"line\"></span><br><span class=\"line\">diff --git a/README b/README</span><br><span class=\"line\">new file mode 100644</span><br><span class=\"line\">index 0000000..dfd457e</span><br><span class=\"line\">--- /dev/null</span><br><span class=\"line\">+++ b/README</span><br><span class=\"line\">@@ -0,0 +1 @@</span><br><span class=\"line\">+哈哈哈</span><br></pre></td></tr></table></figure>\n<h2 id=\"分支操作\"><a href=\"#分支操作\" class=\"headerlink\" title=\"分支操作\"></a>分支操作</h2><p>再进行多个作业并行开发时我们会用到分支，例如你要为项目添加一个新的功能，而该功能如果在master分支上改动的话可能会对整个上线的项目造成影响，于是创建一个分支来开发这个功能，不同分支内的操作互不影响，在功能完成之后再将其合并到master分支上。</p>\n<h3 id=\"创建分支\"><a href=\"#创建分支\" class=\"headerlink\" title=\"创建分支\"></a>创建分支</h3><p>创建名为<code>fix-bug</code>的分支。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git branch fix-bug</span><br></pre></td></tr></table></figure>\n<p>查看当前所有分支。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git branch</span><br><span class=\"line\">  fix-bug</span><br><span class=\"line\">* master</span><br></pre></td></tr></table></figure>\n<p>表示目前有<code>master</code>和<code>fix-bug</code>两个分支，分支前如果有<code>*</code>号表示目前工作区处于该分支下。<br>切换到fix-bug分支。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout fix-bug</span><br></pre></td></tr></table></figure>\n<p>创建并切换分支<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout -b fix-bug</span><br></pre></td></tr></table></figure></p>\n<p>相当于执行了<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch fix-bug</span><br><span class=\"line\">git checkout fix-bug</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"合并分支\"><a href=\"#合并分支\" class=\"headerlink\" title=\"合并分支\"></a>合并分支</h3><p>当你在fix-bug分支修改好了以后，需要将其合并到master分支，需要执行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout master</span><br><span class=\"line\">git merge --no-ff fix-bug</span><br></pre></td></tr></table></figure></p>\n<p>切换回上一分支<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout -</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"查看提交内容-图表形式\"><a href=\"#查看提交内容-图表形式\" class=\"headerlink\" title=\"查看提交内容(图表形式)\"></a>查看提交内容(图表形式)</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git log --graph</span><br><span class=\"line\">*   commit c767c54a9bdd2af3e1cf4d464ddceefbc3fa1222</span><br><span class=\"line\">|\\  Merge: b56393f 96c45a4</span><br><span class=\"line\">| | Author: EvilFinder &lt;rootkitspace@gmail.com&gt;</span><br><span class=\"line\">| | Date:   Fri Aug 12 16:29:35 2016 +0800</span><br><span class=\"line\">| |</span><br><span class=\"line\">| |     Merge branch &apos;fix-bug&apos;</span><br><span class=\"line\">| |</span><br><span class=\"line\">| * commit 96c45a4fa6c7ae99d8c7564ec1758cdd3b8e4845</span><br><span class=\"line\">|/  Author: EvilFinder &lt;rootkitspace@gmail.com&gt;</span><br><span class=\"line\">|   Date:   Fri Aug 12 16:29:16 2016 +0800</span><br><span class=\"line\">|</span><br><span class=\"line\">|       Complete fix bug</span><br><span class=\"line\">|</span><br><span class=\"line\">* commit b56393fbf0fa34dc95973114bfbcbb0f9d81f9e1</span><br><span class=\"line\">  Author: EvilFinder &lt;rootkitspace@gmail.com&gt;</span><br><span class=\"line\">  Date:   Fri Aug 12 15:43:40 2016 +0800</span><br><span class=\"line\"></span><br><span class=\"line\">      First commit</span><br></pre></td></tr></table></figure>\n<h2 id=\"回溯历史版本\"><a href=\"#回溯历史版本\" class=\"headerlink\" title=\"回溯历史版本\"></a>回溯历史版本</h2><p>若希望项目回复到之前的某一状态，需要查看历史提交查看指向提交记录的哈希值，使用<code>git reset</code>来进行历史版本的回溯。<br>回溯到<code>fix-bug</code>分支创建前的状态，首先需要找到哈希值<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git log</span><br><span class=\"line\">commit c767c54a9bdd2af3e1cf4d464ddceefbc3fa1222</span><br><span class=\"line\">Merge: b56393f 96c45a4</span><br><span class=\"line\">Author: EvilFinder &lt;rootkitspace@gmail.com&gt;</span><br><span class=\"line\">Date:   Fri Aug 12 16:29:35 2016 +0800</span><br><span class=\"line\"></span><br><span class=\"line\">    Merge branch &apos;fix-bug&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">commit 96c45a4fa6c7ae99d8c7564ec1758cdd3b8e4845</span><br><span class=\"line\">Author: EvilFinder &lt;rootkitspace@gmail.com&gt;</span><br><span class=\"line\">Date:   Fri Aug 12 16:29:16 2016 +0800</span><br><span class=\"line\"></span><br><span class=\"line\">    Complete fix bug</span><br><span class=\"line\"></span><br><span class=\"line\">commit b56393fbf0fa34dc95973114bfbcbb0f9d81f9e1</span><br><span class=\"line\">Author: EvilFinder &lt;rootkitspace@gmail.com&gt;</span><br><span class=\"line\">Date:   Fri Aug 12 15:43:40 2016 +0800</span><br><span class=\"line\"></span><br><span class=\"line\">    First commit</span><br><span class=\"line\">$ git reset --hard b56393fbf0fa34dc95973114bfbcbb0f9d81f9e1</span><br><span class=\"line\">HEAD is now at b56393f First commit</span><br></pre></td></tr></table></figure></p>\n<hr>\n<p>未完待续</p>\n","categories":[],"tags":["Git"]},{"title":"Linux系统信息查看(二)","url":"http://www.moodmax.me/2015/10/25/Linux系统信息查看(二)/","content":"<p><center><img src=\"https://i.loli.net/2018/08/17/5b7657ff15242.jpg\" alt=\"\"></center><br><a id=\"more\"></a></p>\n<h2 id=\"1-查看系统内核参数\"><a href=\"#1-查看系统内核参数\" class=\"headerlink\" title=\"1.查看系统内核参数\"></a>1.查看系统内核参数</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cat /proc/cmdline</span><br><span class=\"line\">BOOT_IMAGE=/boot/vmlinuz-4.2.0-34-generic root=UUID=b0d331a7-e90a-481e-98af-d59b9a26b342 ro quiet splash vt.handoff=7</span><br><span class=\"line\">$ sysctl -a | more</span><br><span class=\"line\">sysctl: permission denied on key <span class=\"string\">'fs.protected_hardlinks'</span></span><br><span class=\"line\">sysctl: abi.vsyscall32 = 1</span><br><span class=\"line\">permission denied on key <span class=\"string\">'fs.protected_symlinks'</span></span><br><span class=\"line\">debug.exception-trace = 1</span><br><span class=\"line\">debug.kprobes-optimization = 1</span><br><span class=\"line\">dev.cdrom.autoclose = 1</span><br><span class=\"line\">dev.cdrom.autoeject = 0</span><br><span class=\"line\">(信息较多，部分忽略)</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-查看系统内核架构-32-bit或者64-bit\"><a href=\"#2-查看系统内核架构-32-bit或者64-bit\" class=\"headerlink\" title=\"2.查看系统内核架构(32 bit或者64 bit)\"></a>2.查看系统内核架构(32 bit或者64 bit)</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ uname -m</span><br><span class=\"line\">x86_64</span><br><span class=\"line\">$ getconf LONG_BIT</span><br><span class=\"line\">64</span><br><span class=\"line\">$ arch</span><br><span class=\"line\">x86_64</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-查看系统磁盘信息\"><a href=\"#3-查看系统磁盘信息\" class=\"headerlink\" title=\"3.查看系统磁盘信息\"></a>3.查看系统磁盘信息</h2><h3 id=\"查看所有安装的磁盘和大小\"><a href=\"#查看所有安装的磁盘和大小\" class=\"headerlink\" title=\"查看所有安装的磁盘和大小\"></a>查看所有安装的磁盘和大小</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo fdisk -l | grep <span class=\"string\">'^Disk /dev'</span></span><br><span class=\"line\">Partition 2 does not start on physical sector boundary.</span><br><span class=\"line\">Disk /dev/ram0: 64 MiB, 67108864 bytes, 131072 sectors</span><br><span class=\"line\">Disk /dev/ram1: 64 MiB, 67108864 bytes, 131072 sectors</span><br><span class=\"line\">Disk /dev/ram2: 64 MiB, 67108864 bytes, 131072 sectors</span><br><span class=\"line\">Disk /dev/ram3: 64 MiB, 67108864 bytes, 131072 sectors</span><br><span class=\"line\">Disk /dev/ram4: 64 MiB, 67108864 bytes, 131072 sectors</span><br><span class=\"line\">Disk /dev/ram5: 64 MiB, 67108864 bytes, 131072 sectors</span><br><span class=\"line\">Disk /dev/ram6: 64 MiB, 67108864 bytes, 131072 sectors</span><br><span class=\"line\">Disk /dev/ram7: 64 MiB, 67108864 bytes, 131072 sectors</span><br><span class=\"line\">......</span><br></pre></td></tr></table></figure>\n<h3 id=\"查看某一个磁盘分区-以-dev-sda为例\"><a href=\"#查看某一个磁盘分区-以-dev-sda为例\" class=\"headerlink\" title=\"查看某一个磁盘分区(以/dev/sda为例)\"></a>查看某一个磁盘分区(以/dev/sda为例)</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo fdisk -l /dev/sda</span><br><span class=\"line\">Disk /dev/sda: 931.5 GiB, 1000204886016 bytes, 1953525168 sectors</span><br><span class=\"line\">Units: sectors of 1 * 512 = 512 bytes</span><br><span class=\"line\">Sector size (logical/physical): 512 bytes / 4096 bytes</span><br><span class=\"line\">I/O size (minimum/optimal): 4096 bytes / 4096 bytes</span><br><span class=\"line\">Disklabel <span class=\"built_in\">type</span>: dos</span><br><span class=\"line\">Disk identifier: 0x2856e6e4</span><br><span class=\"line\">设备       启动 Start     末尾     扇区   Size Id 类型</span><br><span class=\"line\">/dev/sda1  *     2048 1953523711 1953521664 931.5G 83 Linux</span><br></pre></td></tr></table></figure>\n<h3 id=\"查看所有的块设备\"><a href=\"#查看所有的块设备\" class=\"headerlink\" title=\"查看所有的块设备\"></a>查看所有的块设备</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ lsblk</span><br><span class=\"line\">NAME   MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT</span><br><span class=\"line\">sda      8:0    0 931.5G  0 disk </span><br><span class=\"line\">└─sda1   8:1    0 931.5G  0 part /HDD</span><br><span class=\"line\">sdb      8:16   0 238.5G  0 disk </span><br><span class=\"line\">├─sdb1   8:17   0   1.9G  0 part [SWAP]</span><br><span class=\"line\">├─sdb2   8:18   0     1K  0 part </span><br><span class=\"line\">└─sdb5   8:21   0 236.6G  0 part /</span><br><span class=\"line\">sr0     11:0    1  1024M  0 rom</span><br></pre></td></tr></table></figure>\n<h3 id=\"查看文件系统的使用情况\"><a href=\"#查看文件系统的使用情况\" class=\"headerlink\" title=\"查看文件系统的使用情况\"></a>查看文件系统的使用情况</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ df</span><br><span class=\"line\">文件系统           1K-块     已用      可用 已用% 挂载点</span><br><span class=\"line\">udev             8144012        0   8144012    0% /dev</span><br><span class=\"line\">tmpfs            1632264     9720   1622544    1% /run</span><br><span class=\"line\">/dev/sdb5      244031768  9722628 221889968    5% /</span><br><span class=\"line\">tmpfs            8161312    55784   8105528    1% /dev/shm</span><br><span class=\"line\">tmpfs               5120        4      5116    1% /run/lock</span><br><span class=\"line\">tmpfs            8161312        0   8161312    0% /sys/fs/cgroup</span><br><span class=\"line\">/dev/sda1      961301832 26746880 885700528    3% /HDD</span><br><span class=\"line\">cgmfs                100        0       100    0% /run/cgmanager/fs</span><br><span class=\"line\">tmpfs            1632264       64   1632200    1% /run/user/1000</span><br><span class=\"line\">$ df -H</span><br><span class=\"line\">文件系统        容量  已用  可用 已用% 挂载点</span><br><span class=\"line\">udev            8.4G     0  8.4G    0% /dev</span><br><span class=\"line\">tmpfs           1.7G   10M  1.7G    1% /run</span><br><span class=\"line\">/dev/sdb5       250G   10G  228G    5% /</span><br><span class=\"line\">tmpfs           8.4G   58M  8.4G    1% /dev/shm</span><br><span class=\"line\">tmpfs           5.3M  4.1k  5.3M    1% /run/lock</span><br><span class=\"line\">tmpfs           8.4G     0  8.4G    0% /sys/fs/cgroup</span><br><span class=\"line\">/dev/sda1       985G   28G  907G    3% /HDD</span><br><span class=\"line\">cgmfs           103k     0  103k    0% /run/cgmanager/fs</span><br><span class=\"line\">tmpfs           1.7G   66k  1.7G    1% /run/user/1000</span><br><span class=\"line\">$ df -HT</span><br><span class=\"line\">文件系统       类型      容量  已用  可用 已用% 挂载点</span><br><span class=\"line\">udev           devtmpfs  8.4G     0  8.4G    0% /dev</span><br><span class=\"line\">tmpfs          tmpfs     1.7G   10M  1.7G    1% /run</span><br><span class=\"line\">/dev/sdb5      ext4      250G   10G  228G    5% /</span><br><span class=\"line\">tmpfs          tmpfs     8.4G   58M  8.3G    1% /dev/shm</span><br><span class=\"line\">tmpfs          tmpfs     5.3M  4.1k  5.3M    1% /run/lock</span><br><span class=\"line\">tmpfs          tmpfs     8.4G     0  8.4G    0% /sys/fs/cgroup</span><br><span class=\"line\">/dev/sda1      ext4      985G   28G  907G    3% /HDD</span><br><span class=\"line\">cgmfs          tmpfs     103k     0  103k    0% /run/cgmanager/fs</span><br><span class=\"line\">tmpfs          tmpfs     1.7G   66k  1.7G    1% /run/user/1000</span><br></pre></td></tr></table></figure>\n<h3 id=\"查看挂载的文件系统\"><a href=\"#查看挂载的文件系统\" class=\"headerlink\" title=\"查看挂载的文件系统\"></a>查看挂载的文件系统</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ mount</span><br><span class=\"line\">sysfs on /sys <span class=\"built_in\">type</span> sysfs (rw,nosuid,nodev,noexec,relatime)</span><br><span class=\"line\">proc on /proc <span class=\"built_in\">type</span> proc (rw,nosuid,nodev,noexec,relatime)</span><br><span class=\"line\">udev on /dev <span class=\"built_in\">type</span> devtmpfs (rw,nosuid,relatime,size=8144012k,nr_inodes=2036003,mode=755)</span><br><span class=\"line\">devpts on /dev/pts <span class=\"built_in\">type</span> devpts (rw,nosuid,noexec,relatime,gid=5,mode=620,ptmxmode=000)</span><br><span class=\"line\">tmpfs on /run <span class=\"built_in\">type</span> tmpfs </span><br><span class=\"line\">......</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-查看系统PCI设备的硬件信息\"><a href=\"#4-查看系统PCI设备的硬件信息\" class=\"headerlink\" title=\"4.查看系统PCI设备的硬件信息\"></a>4.查看系统PCI设备的硬件信息</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ lspci</span><br><span class=\"line\">00:00.0 Host bridge: Intel Corporation 3rd Gen Core processor DRAM Controller (rev 09)</span><br><span class=\"line\">00:01.0 PCI bridge: Intel Corporation Xeon E3-1200 v2/3rd Gen Core processor PCI Express Root Port (rev 09)</span><br><span class=\"line\">00:02.0 VGA compatible controller: Intel Corporation 3rd Gen Core processor Graphics Controller (rev 09)</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<h2 id=\"5-查看系统USB设备信息\"><a href=\"#5-查看系统USB设备信息\" class=\"headerlink\" title=\"5.查看系统USB设备信息\"></a>5.查看系统USB设备信息</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ lsusb</span><br><span class=\"line\">Bus 004 Device 004: ID 04f2:b34c Chicony Electronics Co., Ltd </span><br><span class=\"line\">Bus 004 Device 003: ID 147e:1002 Upek Biometric Touchchip/Touchstrip Fingerprint Sensor</span><br><span class=\"line\">Bus 004 Device 002: ID 8087:0024 Intel Corp. Integrated Rate Matching Hub</span><br><span class=\"line\">Bus 004 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub</span><br><span class=\"line\">Bus 003 Device 002: ID 8087:0024 Intel Corp. Integrated Rate Matching Hub</span><br><span class=\"line\">Bus 003 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub</span><br><span class=\"line\">Bus 002 Device 001: ID 1d6b:0003 Linux Foundation 3.0 root hub</span><br><span class=\"line\">Bus 001 Device 002: ID 046d:c537 Logitech, Inc. </span><br><span class=\"line\">Bus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub</span><br><span class=\"line\">$ lsusb -vt</span><br><span class=\"line\">/:  Bus 04.Port 1: Dev 1, Class=root_hub, Driver=ehci-pci/2p, 480M</span><br><span class=\"line\">    |__ Port 1: Dev 2, If 0, Class=Hub, Driver=hub/8p, 480M</span><br><span class=\"line\">        |__ Port 5: Dev 3, If 0, Class=Vendor Specific Class, Driver=, 12M</span><br><span class=\"line\">        |__ Port 6: Dev 4, If 0, Class=Video, Driver=uvcvideo, 480M</span><br><span class=\"line\">        |__ Port 6: Dev 4, If 1, Class=Video, Driver=uvcvideo, 480M</span><br><span class=\"line\">/:  Bus 03.Port 1: Dev 1, Class=root_hub, Driver=ehci-pci/2p, 480M</span><br><span class=\"line\">    |__ Port 1: Dev 2, If 0, Class=Hub, Driver=hub/6p, 480M</span><br><span class=\"line\">/:  Bus 02.Port 1: Dev 1, Class=root_hub, Driver=xhci_hcd/4p, 5000M</span><br><span class=\"line\">/:  Bus 01.Port 1: Dev 1, Class=root_hub, Driver=xhci_hcd/4p, 480M</span><br><span class=\"line\">    |__ Port 3: Dev 2, If 0, Class=Human Interface Device, Driver=usbhid, 12M</span><br><span class=\"line\">    |__ Port 3: Dev 2, If 1, Class=Human Interface Device, Driver=usbhid, 12M</span><br></pre></td></tr></table></figure>\n<h2 id=\"6-查看系统无线设备信息\"><a href=\"#6-查看系统无线设备信息\" class=\"headerlink\" title=\"6.查看系统无线设备信息\"></a>6.查看系统无线设备信息</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ iwconfig</span><br><span class=\"line\">enp4s0f2  no wireless extensions.</span><br><span class=\"line\">lo        no wireless extensions.</span><br><span class=\"line\">wlp3s0    IEEE 802.11bgn  ESSID:<span class=\"string\">\"stdu.edu.cn\"</span>  </span><br><span class=\"line\">          Mode:Managed  Frequency:2.437 GHz  Access Point: 26:14:4B:55:AE:53   </span><br><span class=\"line\">          Bit Rate=72.2 Mb/s   Tx-Power=20 dBm   </span><br><span class=\"line\">          Retry short <span class=\"built_in\">limit</span>:7   RTS thr=2347 B   Fragment thr:off</span><br><span class=\"line\">          Power Management:off</span><br><span class=\"line\">          Link Quality=40/70  Signal level=-70 dBm  </span><br><span class=\"line\">          Rx invalid nwid:0  Rx invalid crypt:0  Rx invalid frag:0</span><br><span class=\"line\">          Tx excessive retries:0  Invalid misc:1097   Missed beacon:0</span><br><span class=\"line\">$ watch -n 1 cat /proc/net/wireless</span><br><span class=\"line\">(实时显示)</span><br><span class=\"line\">$ wavemon</span><br><span class=\"line\">(动态显示无线网络质量等信息)</span><br></pre></td></tr></table></figure>\n<p>注意：执行上述<code>wavemon</code>指令时需要先执行<code>sudo apt-get install wavemon</code>。</p>\n<h2 id=\"7-查看系统VGA等图形设备信息\"><a href=\"#7-查看系统VGA等图形设备信息\" class=\"headerlink\" title=\"7.查看系统VGA等图形设备信息\"></a>7.查看系统VGA等图形设备信息</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ lspci | grep -i vga</span><br><span class=\"line\">00:02.0 VGA compatible controller: Intel Corporation 3rd Gen Core processor Graphics Controller (rev 09)</span><br><span class=\"line\">01:00.0 VGA compatible controller: NVIDIA Corporation GK107M [GeForce GTX 660M] (rev a1)</span><br><span class=\"line\">$ lspci -vvnn | grep VGA</span><br><span class=\"line\">\tControl: I/O- Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr- Stepping- SERR- FastB2B- DisINTx-</span><br><span class=\"line\">\tControl: I/O+ Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr- Stepping- SERR- FastB2B- DisINTx+</span><br><span class=\"line\">\tBridgeCtl: Parity- SERR- NoISA- VGA- MAbort- &gt;Reset- FastB2B-</span><br><span class=\"line\">00:02.0 VGA compatible controller [0300]: Intel Corporation 3rd Gen Core processor Graphics Controller [8086:0166] (rev 09) (prog-if 00 [VGA controller])</span><br><span class=\"line\">......</span><br></pre></td></tr></table></figure>\n<h3 id=\"查看NVIDIA设备\"><a href=\"#查看NVIDIA设备\" class=\"headerlink\" title=\"查看NVIDIA设备\"></a>查看NVIDIA设备</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ nvidia-smi</span><br></pre></td></tr></table></figure>\n<p>或者<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ nvidia-settings</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"查看AMD-ATI显卡设备信息\"><a href=\"#查看AMD-ATI显卡设备信息\" class=\"headerlink\" title=\"查看AMD/ATI显卡设备信息\"></a>查看AMD/ATI显卡设备信息</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ fglrxinfo</span><br></pre></td></tr></table></figure>\n<h3 id=\"查看系统unity版本\"><a href=\"#查看系统unity版本\" class=\"headerlink\" title=\"查看系统unity版本\"></a>查看系统unity版本</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ unity --version</span><br><span class=\"line\">unity 7.3.3</span><br></pre></td></tr></table></figure>\n<h3 id=\"查看系统视频设备信息\"><a href=\"#查看系统视频设备信息\" class=\"headerlink\" title=\"查看系统视频设备信息\"></a>查看系统视频设备信息</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ lspci | grep -i audio</span><br><span class=\"line\">00:1b.0 Audio device: Intel Corporation 7 Series/C210 Series Chipset Family High Definition Audio Controller (rev 04)</span><br></pre></td></tr></table></figure>\n<p>或者<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cat /proc/asound/cards</span><br><span class=\"line\"> 0 [PCH            ]: HDA-Intel - HDA Intel PCH</span><br><span class=\"line\">                      HDA Intel PCH at 0xf7a10000 irq 32</span><br></pre></td></tr></table></figure></p>\n<p>或者<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ arecord -l</span><br><span class=\"line\">**** CAPTURE 硬體裝置清單 ****</span><br><span class=\"line\">card 0: PCH [HDA Intel PCH], device 0: ALC269VB Analog [ALC269VB Analog]</span><br><span class=\"line\">  子设备: 1/1</span><br><span class=\"line\">  子设备 <span class=\"comment\">#0: subdevice #0</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"8-查看电池信息\"><a href=\"#8-查看电池信息\" class=\"headerlink\" title=\"8.查看电池信息\"></a>8.查看电池信息</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ upower -i /org/freedesktop/UPower/devices/battery_BAT0</span><br><span class=\"line\">native-path:          (null)</span><br><span class=\"line\">  power supply:         no</span><br><span class=\"line\">  updated:              1970年01月01日 星期四 08时00分00秒 (1458648160 seconds ago)</span><br><span class=\"line\">  has <span class=\"built_in\">history</span>:          no</span><br><span class=\"line\">  has statistics:       no</span><br><span class=\"line\">  unknown</span><br><span class=\"line\">    warning-level:       unknown</span><br><span class=\"line\">    icon-name:          <span class=\"string\">'(null)'</span></span><br><span class=\"line\">$ acpi -V</span><br><span class=\"line\">Battery 0: Full, 100%</span><br><span class=\"line\">Battery 0: design capacity 5200 mAh, last full capacity 3701 mAh = 71%</span><br><span class=\"line\">Adapter 0: on-line</span><br><span class=\"line\">Thermal 0: ok, 56.0 degrees C</span><br><span class=\"line\">Thermal 0: trip point 0 switches to mode critical at temperature 149.8 degrees C</span><br><span class=\"line\">Cooling 0: x86_pkg_temp no state information available</span><br><span class=\"line\">Cooling 1: intel_powerclamp no state information available</span><br><span class=\"line\">Cooling 2: LCD 6 of 7</span><br><span class=\"line\">Cooling 3: Processor 0 of 3</span><br><span class=\"line\">Cooling 4: Processor 0 of 3</span><br><span class=\"line\">Cooling 5: Processor 0 of 3</span><br><span class=\"line\">Cooling 6: Processor 0 of 3</span><br><span class=\"line\">Cooling 7: Processor 0 of 3</span><br><span class=\"line\">Cooling 8: Processor 0 of 3</span><br><span class=\"line\">Cooling 9: Processor 0 of 3</span><br><span class=\"line\">Cooling 10: Processor 0 of 3</span><br></pre></td></tr></table></figure>\n<h2 id=\"9-查看系统运行了多长时间\"><a href=\"#9-查看系统运行了多长时间\" class=\"headerlink\" title=\"9.查看系统运行了多长时间\"></a>9.查看系统运行了多长时间</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ uptime</span><br><span class=\"line\"> 20:03:41 up 40 min,  2 users,  load average: 0.31, 0.26, 0.29</span><br><span class=\"line\">$ who</span><br><span class=\"line\">vil     :0           2016-03-22 19:22 (:0)</span><br><span class=\"line\">evil     pts/2        2016-03-22 19:32 (:0)</span><br><span class=\"line\">$ w</span><br><span class=\"line\"> 20:04:01 up 41 min,  2 users,  load average: 0.29, 0.26, 0.29</span><br><span class=\"line\">USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT</span><br><span class=\"line\">evil     :0       :0               19:22   ?xdm?  12:38   0.31s /sbin/upstart --user</span><br><span class=\"line\">evil     pts/2    :0               19:32    0.00s  0.15s  0.00s w</span><br></pre></td></tr></table></figure>\n<h2 id=\"10-查看系统负载\"><a href=\"#10-查看系统负载\" class=\"headerlink\" title=\"10.查看系统负载\"></a>10.查看系统负载</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cat /proc/loadavg</span><br><span class=\"line\">0.46 0.30 0.30 1/676 5626</span><br><span class=\"line\">$ sudo top</span><br></pre></td></tr></table></figure>\n<h2 id=\"11-查看系统重启和关机记录\"><a href=\"#11-查看系统重启和关机记录\" class=\"headerlink\" title=\"11.查看系统重启和关机记录\"></a>11.查看系统重启和关机记录</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ last reboot</span><br><span class=\"line\">reboot   system boot  4.2.0-34-generic Tue Mar 22 19:22   still running</span><br><span class=\"line\">reboot   system boot  4.2.0-34-generic Tue Mar 22 18:37 - 19:22  (00:45)</span><br><span class=\"line\">reboot   system boot  4.2.0-34-generic Tue Mar 22 15:49 - 17:22  (01:32)</span><br><span class=\"line\">reboot   system boot  4.2.0-34-generic Tue Mar 22 14:50 - 15:49  (00:58)</span><br><span class=\"line\">reboot   system boot  4.2.0-34-generic Tue Mar 22 08:11 - 13:16  (05:04)</span><br><span class=\"line\">reboot   system boot  4.2.0-34-generic Mon Mar 21 22:44 - 22:47  (00:03)</span><br><span class=\"line\">reboot   system boot  4.2.0-34-generic Mon Mar 21 18:16 - 22:47  (04:31)</span><br><span class=\"line\">......</span><br><span class=\"line\">$ last shutdown</span><br><span class=\"line\">wtmp begins Thu Mar 17 19:59:43 2016</span><br></pre></td></tr></table></figure>\n<h2 id=\"12-查看系统运行级别\"><a href=\"#12-查看系统运行级别\" class=\"headerlink\" title=\"12.查看系统运行级别\"></a>12.查看系统运行级别</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ runlevel</span><br><span class=\"line\">N 5</span><br><span class=\"line\">$ who -r</span><br><span class=\"line\">运行级别 5 2016-03-22 19:23</span><br></pre></td></tr></table></figure>\n","categories":[],"tags":["Linux"]},{"title":"Linux系统信息查看(一)","url":"http://www.moodmax.me/2015/10/12/Linux系统信息查看(一)/","content":"<blockquote>\n<p>对于一台新的Linux计算机或者服务器，我们需要收集一些关于这台机器的硬件信息。当你更换机器的内存或者网卡以及硬盘等硬件设备时候同样十分有用，因为更换之前你需要首先收集你系统硬件信息的型号，以此来挑选相应的硬件，这里列出几个常用的用于收集硬件信息的指令。</p>\n</blockquote>\n<a id=\"more\"></a>\n<center><img src=\"https://i.loli.net/2018/08/17/5b7657b7013f0.png\" alt=\"\"></center>\n\n<p>所有以下的指令都是在我自己的Ubuntu15.10上做的测试，但这些指令同样适用于Debian系的其他发行版，部分指令适用于RedHat系。</p>\n<h2 id=\"1-查看系统主机名\"><a href=\"#1-查看系统主机名\" class=\"headerlink\" title=\"1.查看系统主机名\"></a>1.查看系统主机名</h2><h3 id=\"查看hostname\"><a href=\"#查看hostname\" class=\"headerlink\" title=\"查看hostname\"></a>查看hostname</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hostname</span><br><span class=\"line\">Finder</span><br><span class=\"line\">$ cat /etc/hostname</span><br><span class=\"line\">Finder</span><br></pre></td></tr></table></figure>\n<h3 id=\"查看DNS-domain-name\"><a href=\"#查看DNS-domain-name\" class=\"headerlink\" title=\"查看DNS domain name\"></a>查看DNS domain name</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ dnsdomainname</span><br><span class=\"line\">cyberciti.biz</span><br></pre></td></tr></table></figure>\n<h3 id=\"查看系统全称域名\"><a href=\"#查看系统全称域名\" class=\"headerlink\" title=\"查看系统全称域名\"></a>查看系统全称域名</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hostname -f</span><br><span class=\"line\">Finder</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-查看主板序列号、机器制造商以及架构名称\"><a href=\"#2-查看主板序列号、机器制造商以及架构名称\" class=\"headerlink\" title=\"2.查看主板序列号、机器制造商以及架构名称\"></a>2.查看主板序列号、机器制造商以及架构名称</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo dmidecode -s system-serial-number</span><br><span class=\"line\">N/A</span><br><span class=\"line\">$ sudo dmidecode -s system-manufacturer</span><br><span class=\"line\">Hasee Computer Co.,Ltd.</span><br><span class=\"line\">$ sudo dmidecode -s system-product-name</span><br><span class=\"line\">CW35</span><br></pre></td></tr></table></figure>\n<p>或者使用lshw指令<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ lshw | more</span><br><span class=\"line\">finder                    </span><br><span class=\"line\">    description: Computer</span><br><span class=\"line\">    width: 64 bits</span><br><span class=\"line\">    capabilities: vsyscall32</span><br><span class=\"line\">  *-core</span><br><span class=\"line\">       description: Motherboard</span><br><span class=\"line\">       physical id: 0</span><br><span class=\"line\">     *-memory</span><br><span class=\"line\">(信息较多，部分忽略)</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"3-查看已安装的硬件\"><a href=\"#3-查看已安装的硬件\" class=\"headerlink\" title=\"3.查看已安装的硬件\"></a>3.查看已安装的硬件</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo lsdev</span><br><span class=\"line\">Device            DMA   IRQ  I/O Ports</span><br><span class=\"line\">------------------------------------------------</span><br><span class=\"line\">0000:00:02.0                   f000-f03f</span><br><span class=\"line\">0000:00:1f.2             28    f060-f07f   f080-f083   f090-f097   f0a0-f0a3   f0b0-f0b7</span><br><span class=\"line\">0000:00:1f.3                   f040-f05f</span><br><span class=\"line\">0000:01:00.0                     e000-e07f</span><br><span class=\"line\">(信息较多，部分忽略)</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-查看CPU信息\"><a href=\"#4-查看CPU信息\" class=\"headerlink\" title=\"4.查看CPU信息\"></a>4.查看CPU信息</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cat /proc/cpuinfo</span><br><span class=\"line\">processor\t: 0</span><br><span class=\"line\">vendor_id\t: GenuineIntel</span><br><span class=\"line\">cpu family\t: 6</span><br><span class=\"line\">model\t\t: 58</span><br><span class=\"line\">model name\t: Intel(R) Core(TM) i7-3630QM CPU @ 2.40GHz</span><br><span class=\"line\">stepping\t: 9</span><br><span class=\"line\">microcode\t: 0x12</span><br><span class=\"line\">cpu MHz\t\t: 1200.000</span><br><span class=\"line\">cache size\t: 6144 KB</span><br><span class=\"line\">(信息较多，部分忽略)</span><br></pre></td></tr></table></figure>\n<p>或者使用<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ lscpu</span><br><span class=\"line\">Architecture:          x86_64</span><br><span class=\"line\">CPU 运行模式：    32-bit, 64-bit</span><br><span class=\"line\">Byte Order:            Little Endian</span><br><span class=\"line\">CPU(s):                8</span><br><span class=\"line\">On-line CPU(s) list:   0-7</span><br><span class=\"line\">每个核的线程数：2</span><br><span class=\"line\">每个座的核数：  4</span><br><span class=\"line\">Socket(s):             1</span><br><span class=\"line\">NUMA 节点：         1</span><br><span class=\"line\">厂商 ID：           GenuineIntel</span><br><span class=\"line\">CPU 系列：          6</span><br><span class=\"line\">型号：              58</span><br><span class=\"line\">Model name:            Intel(R) Core(TM) i7-3630QM CPU @ 2.40GHz</span><br><span class=\"line\">步进：              9</span><br><span class=\"line\">CPU MHz：             1217.062</span><br><span class=\"line\">CPU max MHz:           3400.0000</span><br><span class=\"line\">CPU min MHz:           1200.0000</span><br><span class=\"line\">BogoMIPS:              4789.17</span><br><span class=\"line\">虚拟化：           VT-x</span><br><span class=\"line\">L1d 缓存：          32K</span><br><span class=\"line\">L1i 缓存：          32K</span><br><span class=\"line\">L2 缓存：           256K</span><br><span class=\"line\">L3 缓存：           6144K</span><br><span class=\"line\">NUMA node0 CPU(s):     0-7</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"5-查看CPU相关数据\"><a href=\"#5-查看CPU相关数据\" class=\"headerlink\" title=\"5.查看CPU相关数据\"></a>5.查看CPU相关数据</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo mpstat</span><br><span class=\"line\">Linux 4.2.0-34-generic (Finder) \t2015年11月12日 \t_x86_64_\t(8 CPU)</span><br><span class=\"line\"></span><br><span class=\"line\">12时53分14秒  CPU    %usr   %nice    %sys %iowait    %irq   %soft  %steal  %guest  %gnice   %idle</span><br><span class=\"line\">12时53分14秒  all    7.79    0.60    2.65    0.28    0.00    0.01    0.00    0.00    0.00   88.67</span><br></pre></td></tr></table></figure>\n<p>注意:使用上述操作前请安装sysstat,执行<code>apt-get install sysstat</code>。</p>\n<h2 id=\"6-查看内存信息\"><a href=\"#6-查看内存信息\" class=\"headerlink\" title=\"6.查看内存信息\"></a>6.查看内存信息</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo dmidecode -t 16</span><br><span class=\"line\"><span class=\"comment\"># dmidecode 2.12</span></span><br><span class=\"line\">SMBIOS 2.7 present.</span><br><span class=\"line\"></span><br><span class=\"line\">Handle 0x0040, DMI <span class=\"built_in\">type</span> 16, 23 bytes</span><br><span class=\"line\">Physical Memory Array</span><br><span class=\"line\">\tLocation: System Board Or Motherboard</span><br><span class=\"line\">\tUse: System Memory</span><br><span class=\"line\">\tError Correction Type: None</span><br><span class=\"line\">\tMaximum Capacity: 32 GB</span><br><span class=\"line\">\tError Information Handle: Not Provided</span><br><span class=\"line\">\tNumber Of Devices: 4</span><br></pre></td></tr></table></figure>\n<p>上述信息中<code>Maximum Capacity: 32 GB</code>表示系统最大支持32GB内存，<code>Number Of Devices: 4</code>表示系统有四个内存插槽。</p>\n<h2 id=\"7-查看系统交换空间的使用情况\"><a href=\"#7-查看系统交换空间的使用情况\" class=\"headerlink\" title=\"7.查看系统交换空间的使用情况\"></a>7.查看系统交换空间的使用情况</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cat /proc/swaps</span><br><span class=\"line\">Filename\t\t\t\tType\t\tSize\tUsed\tPriority</span><br><span class=\"line\">/dev/sdb1                               partition\t2000892\t0\t-1</span><br></pre></td></tr></table></figure>\n<h2 id=\"8-查看系统虚拟内存数据\"><a href=\"#8-查看系统虚拟内存数据\" class=\"headerlink\" title=\"8.查看系统虚拟内存数据\"></a>8.查看系统虚拟内存数据</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo vmstat</span><br><span class=\"line\">procs -----------memory---------- ---swap-- -----io---- -system-- ------cpu-----</span><br><span class=\"line\"> r  b   swpd   free   buff  cache   si   so    bi    bo   <span class=\"keyword\">in</span>   cs us sy id wa st</span><br><span class=\"line\"> 0  0      0 11852376 203272 2081544    0    0    38    56  198  394  8  3 89  0  0</span><br></pre></td></tr></table></figure>\n<h2 id=\"9-查看Linux发行版本及相关信息\"><a href=\"#9-查看Linux发行版本及相关信息\" class=\"headerlink\" title=\"9.查看Linux发行版本及相关信息\"></a>9.查看Linux发行版本及相关信息</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ lsb_release -a</span><br><span class=\"line\">No LSB modules are available.</span><br><span class=\"line\">Distributor ID:\tUbuntu</span><br><span class=\"line\">Description:\tUbuntu 15.10</span><br><span class=\"line\">Release:\t15.10</span><br><span class=\"line\">Codename:\twily</span><br></pre></td></tr></table></figure>\n<h2 id=\"10-查看系统内核版本号\"><a href=\"#10-查看系统内核版本号\" class=\"headerlink\" title=\"10.查看系统内核版本号\"></a>10.查看系统内核版本号</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ uname -r</span><br><span class=\"line\">4.2.0-34-generic</span><br></pre></td></tr></table></figure>\n<p>或者<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ uname -a</span><br><span class=\"line\">Linux Finder 4.2.0-34-generic <span class=\"comment\">#39-Ubuntu SMP Thu Mar 10 22:13:01 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux</span></span><br></pre></td></tr></table></figure></p>\n","categories":[],"tags":["Linux"]},{"title":"category","url":"http://www.moodmax.me/category/index.html","content":"","categories":[],"tags":[]},{"title":"about","url":"http://www.moodmax.me/about/index.html","content":"","categories":[],"tags":[]},{"title":"search","url":"http://www.moodmax.me/search/index.html","content":"","categories":[],"tags":[]},{"title":"tag","url":"http://www.moodmax.me/tag/index.html","content":"","categories":[],"tags":[]}]